// Components
//
// Discrete, self-contained pieces of UI.
//
// Weight: 6
//
// Styleguide Components


@import (reference) 'https://digitallinguistics.blob.core.windows.net/less/colors.less';
@import (reference) 'https://digitallinguistics.blob.core.windows.net/less/variables.less';
@import (reference) 'https://digitallinguistics.blob.core.windows.net/less/inline.less';
@import (reference) 'https://digitallinguistics.blob.core.windows.net/less/headings.less';


// Banner
//
// A site banner at the top of the page. When including additional elements inside the banner, you might want to set `margin-left: auto;` on the element to push it to the opposite end of the banner from the `<h1>`.
//
// Markup: banner.hbs
//
// Styleguide Components.banner
.banner {

  .blue-background;
  align-items: center;
  box-shadow: var(--shadow-deep);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin: 0;
  width: 100%;

  h1 {
    font-size: 2em;
    font-weight: 300;
    min-width: 0;
    padding: var(--padding-text);
    overflow-wrap: break-word;
    word-wrap: break-word;
  }

}

// Bulleted List
//
// In DLx projects, lists are often used semantically rather than stylistically, e.g. a phrase includes a list of words. As such, lists have no styling by default, and list styling needs to be explicitly set with the <code>.bulleted</code> or <code>.numbered</code> styles.
//
// Markup: bulleted.hbs
//
// Styleguide Components.bulleted
.bulleted {

  list-style: disc outside none;

  li {
    display: list-item;
  }

}

// Details / Summary
//
// A collapsable `<details>` element, with an optional `<summary>` element. **NOTE:** Not currently supported on Edge.
//
// Markup: details.hbs
//
// Styleguide Components.details
.details {
  summary {
    align-items: center;
    display: flex; // TODO: remove this when flexbox-reset is updated
    flex-direction: row;
    font-weight: var(--bold);
    margin-left: -1em;
    min-width: 0;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }
}

// Text Field
//
// Styles an element as a form field.
//
// Markup: field.hbs
//
// :disabled - When the field is disabled
// :focus    - When the field is focused
//
// Styleguide Components.field
.field {

  --shadow-inset: inset var(--line-width) var(--line-width) 0.15em var(--shadow-color);

  background-color: transparent;
  border: 0.075em solid var(--gray);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-inset);
  padding: var(--padding-text);

  &:focus {

    border-color: var(--blue);
    box-shadow: var(--shadow-inset);
    outline: none;
    --shadow-color: var(--blue);

    &:invalid {
      border-color: var(--darkred);
      box-shadow: var(--shadow-inset);
      --shadow-color: var(--darkred);
    }

  }

  &:disabled {
    background-color: #EAEDED;
    color: #CAD2D3;
    cursor: not-allowed;
  }

}

// Hanging Indented Paragraph
//
// For blocks of text with a hanging indent.
//
// Markup: hanging.hbs
//
// Styleguide Components.hanging
.hanging {
  margin-left: 1em;
  text-indent: -1em;
}

// Navigation
//
// A main navigation bar at the top of the page. The `.banner` and `.nav` classes are generally compatible.
//
// Markup: nav.hbs
//
// Styleguide Components.nav
.nav {

  ul {

    .blue-background;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    font-size: 1.25em;
    list-style: none;
    justify-content: space-around;
    margin: 0;
    padding: 0;

    li {
      min-width: 0;
      overflow-wrap: break-word;
      padding: 0.5em;
      text-align: center;
      word-wrap: break-word;
    }

    a {
      .link-white;
      text-align: center;
    }

  }

}

// Numbered List
//
// For numbered lists.
//
// Markup: numbered.hbs
//
// Styleguide Components.numbered
.numbered {

  counter-reset: numbered;
  list-style: none;

  li {

    counter-increment: numbered;
    display: list-item;
    margin: 0;
    margin-left: 2.5em;

    &::before {
      content: counter(numbered) '.';
      font-weight: bold;
      margin-left: -2.5em;
      padding: var(--padding-text);
      padding: 0.25em 0.5em; // fallback for Edge bug; see issue https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
    }

  }

}

// Pre
//
// Used for standalone code blocks (for inline code blocks, see the `<code>` tag). If the `<pre>` element is used by itself, without a `<code>` element inside it, it will simply display as preformatted text. If a `<code>` element is included inside the `<pre>`, however, that element will be `display: block;`.
//
// Markup: pre.hbs
//
// Styleguide Components.pre
.pre {

  font-family: var(--font-mono);
  white-space: pre;

  code {
    .code;
    display: block;
    overflow-x: auto;
    white-space: pre;
  }

}

// Reference List
//
// Styling for a bibliographic reference list. Note that each reference should be an `<li>` tag containing a `<p>` tag. **NOTE:** You may have to further customize the styling of the `<hX>` element depending on which header you are using.
//
// Markup: reference-list.hbs
//
// Styleguide Components.reference-list
.reference-list {

  a { .link; }

  cite { .cite; }

  h2 { .h2; }

  ol, ul {
    list-style: disc outside none;
    padding: 0.5em 0em;
    padding-left: 1.5em;
  }

  li {
    display: list-item;
    padding: var(--padding-text);

    p {
      display: block;
      margin: 0;
      margin-left: 1.5em;
      padding: var(--padding-text);
      text-indent: -1.5em;
    }

  }

}
