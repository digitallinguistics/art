/*
This file bundles all the DLx styles into a single file.
 */
.abbr[title],
.abbreviation[title] {
  cursor: help;
  text-decoration: dotted underline;
}
.abbr:not([title]),
.abbreviation:not([title]) {
  text-decoration: none;
}
.cite {
  font-style: italic;
}
.dfn,
.definition {
  font-style: normal;
  font-weight: bold;
}
.ling-document {
  counter-reset: examples figures sections tables;
  font-family: var(--font-unicode-serif);
}
.ling-document caption::before {
  content: 'Table ' counter(tables) ':';
  font-weight: bold;
  margin-inline-end: var(--counter-margin);
}
.ling-document figcaption::before {
  content: 'Figure ' counter(figures) ':';
  font-weight: bold;
  margin-inline-end: var(--counter-margin);
}
.ling-document .figure {
  counter-increment: figures;
}
.ling-document h2 {
  counter-increment: sections;
}
.ling-document h2::before {
  content: counter(sections) '.';
  margin-inline-end: var(--counter-margin);
}
.ling-document h3 {
  counter-increment: subsections;
}
.ling-document h3::before {
  content: counter(sections) '.' counter(subsections) '.';
  margin-inline-end: var(--counter-margin);
}
.ling-document h4 {
  counter-increment: subsubsections;
}
.ling-document h4::before {
  content: counter(sections) '.' counter(subsections) '.' counter(subsubsections) '.';
  margin-inline-end: var(--counter-margin);
}
.ling-document h5 {
  counter-increment: paragraphs;
}
.ling-document h5::before {
  content: counter(sections) '.' counter(subsections) '.' counter(subsubsections) '.' counter(paragraphs) '.';
  margin-inline-end: var(--counter-margin);
}
.ling-document h6 {
  counter-increment: subparagraphs;
}
.ling-document h6::before {
  content: counter(sections) '.' counter(subsections) '.' counter(subsubsections) '.' counter(paragraphs) '.' counter(subparagraphs) '.';
  margin-inline-end: var(--counter-margin);
}
.ling-document p {
  margin: 0.5em 0em;
}
.ling-document .paragraph {
  counter-reset: subparagraphs;
}
.ling-document .section {
  counter-reset: subsections;
}
.ling-document .subsection {
  counter-reset: subsubsections;
}
.ling-document .subsubsection {
  counter-reset: paragraphs;
}
.attn,
.attention {
  font-weight: bold;
}
.em,
.emphasis {
  font-style: italic;
}
.i,
.idiomatic {
  font-style: italic;
}
.strong {
  font-weight: bold;
}
.u,
.underline {
  text-decoration: underline;
}
.ex,
.example {
  line-height: 1.5;
}
.ex b,
.example b,
.ex em,
.example em,
.ex .em,
.example .em,
.ex .emphasis,
.example .emphasis,
.ex strong,
.example strong {
  color: var(--em-color);
  font-weight: bold;
}
.ex .ex-source,
.example .ex-source {
  margin-block: 0em;
}
.ex-header {
  text-decoration: underline;
  text-underline-position: under;
}
.ex-source {
  float: right;
  float: inline-end;
  margin-block: 0em;
  padding-inline-start: 0.25em;
}
.exs,
.examples {
  --example-indent: 1.5em;
  --example-margin: 1em;
  list-style-type: none;
}
.exs li,
.examples li {
  display: list-item;
}
.exs .ex,
.examples .ex,
.exs .example,
.examples .example {
  counter-increment: examples;
  counter-reset: subexamples;
  margin-block: var(--example-margin);
  margin-inline-start: var(--example-indent);
  position: relative;
}
.exs .ex::before,
.examples .ex::before,
.exs .example::before,
.examples .example::before {
  content: '(' counter(examples) ')';
  margin-inline-start: calc(var(--example-indent) * -1);
  margin-inline-end: var(--example-indent);
  position: absolute;
}
.exs .subexs,
.examples .subexs,
.exs .subexamples,
.examples .subexamples {
  display: inline-block;
  list-style-type: none;
  margin-inline-start: 1.5em;
  padding: 0em;
}
.exs .subexs li,
.examples .subexs li,
.exs .subexamples li,
.examples .subexamples li {
  counter-increment: subexamples;
  padding-block-end: 0.5em;
}
.exs .subexs li::before,
.examples .subexs li::before,
.exs .subexamples li::before,
.examples .subexamples li::before {
  content: counter(subexamples, lower-alpha) '.';
  margin-inline-start: -1.5em;
  position: absolute;
}
.two-col li {
  column-gap: 1em;
  display: grid;
  grid-template-columns: 1fr 1fr;
}
.three-col li {
  column-gap: 1em;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
}
.gl,
.gloss {
  font-variant: small-caps;
}
.inex,
.inline-ex {
  --txn-padding: 0.15em;
  font-family: var(--font-unicode-serif);
  cursor: copy;
  font-style: italic;
  user-select: all;
}
.igl,
.interlinear {
  --igl-indent: 0em;
  --igl-horizontal-spacing: 1.25em;
  --igl-vertical-spacing: 0.25em;
  display: block;
  font-family: var(--font-unicode-serif);
  line-height: 1.5;
}
.igl abbr,
.interlinear abbr,
.igl .abbr,
.interlinear .abbr,
.igl .abbreviation,
.interlinear .abbreviation,
.igl .gl,
.interlinear .gl,
.igl .gloss,
.interlinear .gloss {
  font-variant: small-caps;
}
.igl abbr[title],
.interlinear abbr[title],
.igl .abbr[title],
.interlinear .abbr[title],
.igl .abbreviation[title],
.interlinear .abbreviation[title],
.igl .gl[title],
.interlinear .gl[title],
.igl .gloss[title],
.interlinear .gloss[title] {
  cursor: help;
  text-decoration: dotted underline;
}
.igl abbr:not([title]),
.interlinear abbr:not([title]),
.igl .abbr:not([title]),
.interlinear .abbr:not([title]),
.igl .abbreviation:not([title]),
.interlinear .abbreviation:not([title]),
.igl .gl:not([title]),
.interlinear .gl:not([title]),
.igl .gloss:not([title]),
.interlinear .gloss:not([title]) {
  text-decoration: none;
}
.igl b,
.interlinear b,
.igl em,
.interlinear em,
.igl .em,
.interlinear .em,
.igl .emphasis,
.interlinear .emphasis,
.igl strong,
.interlinear strong {
  color: var(--em-color);
  font-weight: bold;
}
.igl .ex-header,
.interlinear .ex-header {
  margin-block-end: var(--igl-vertical-spacing);
}
.igl .ex-source,
.interlinear .ex-source {
  margin-block: 0em;
}
.igl .lit,
.interlinear .lit,
.igl .literal,
.interlinear .literal {
  clear: left;
  display: inline;
  margin: 0em;
  padding: 0em;
}
.igl .morphemes,
.interlinear .morphemes,
.igl .words,
.interlinear .words {
  display: flex;
  flex-flow: row wrap;
  list-style: none;
  margin: 0em;
  margin-inline-start: var(--igl-indent);
  padding: 0em;
}
.igl .morpheme,
.interlinear .morpheme,
.igl .word,
.interlinear .word {
  display: flex;
  flex-direction: column;
  margin-block-end: var(--igl-vertical-spacing);
  margin-block-start: var(--igl-vertical-spacing);
}
.igl .morpheme > *,
.interlinear .morpheme > *,
.igl .word > *,
.interlinear .word > * {
  margin: 0em;
  padding: 0em;
}
.igl li + li,
.interlinear li + li,
.igl .morpheme + .morpheme,
.interlinear .morpheme + .morpheme,
.igl .word + .word,
.interlinear .word + .word {
  margin-inline-start: var(--igl-horizontal-spacing);
}
.igl .tln,
.interlinear .tln,
.igl .translation,
.interlinear .translation {
  cursor: copy;
  display: inline;
  quotes: '‘' '’' '“' '”';
  user-select: all;
  margin: 0em;
  padding: 0em;
}
.igl .tln::before,
.interlinear .tln::before,
.igl .translation::before,
.interlinear .translation::before {
  content: open-quote;
}
.igl .tln::after,
.interlinear .tln::after,
.igl .translation::after,
.interlinear .translation::after {
  content: close-quote;
}
.igl > .tln:has(+ .lit),
.interlinear > .tln:has(+ .lit) {
  display: flow-root;
}
.igl .txn,
.interlinear .txn,
.igl .transcription,
.interlinear .transcription {
  --txn-padding: 0.15em;
  font-family: var(--font-unicode-serif);
  margin: 0em;
  padding: 0em;
}
.igl u,
.interlinear u,
.igl .u,
.interlinear .u,
.igl .underline,
.interlinear .underline {
  text-decoration: underline;
}
.igl .words,
.interlinear .words {
  font-size: smaller;
}
.ortho,
.orthographic {
  --txn-padding: 0.15em;
  font-family: var(--font-unicode-serif);
}
.ortho::before,
.orthographic::before {
  content: '⟨';
  padding-right: var(--txn-padding);
}
.ortho::after,
.orthographic::after {
  content: '⟩';
  padding-left: var(--txn-padding);
}
.phon,
.phonemic {
  --txn-padding: 0.15em;
  font-family: var(--font-unicode-serif);
}
.phon::before,
.phonemic::before {
  content: '/';
  padding-right: var(--txn-padding);
}
.phon::after,
.phonemic::after {
  content: '/';
  padding-left: var(--txn-padding);
}
.fon,
.phonetic {
  --txn-padding: 0.15em;
  font-family: var(--font-unicode-serif);
}
.fon::before,
.phonetic::before {
  content: '[';
  padding-right: var(--txn-padding);
}
.fon::after,
.phonetic::after {
  content: ']';
  padding-left: var(--txn-padding);
}
.txn,
.transcription {
  --txn-padding: 0.15em;
  font-family: var(--font-unicode-serif);
}
.tln,
.translation {
  cursor: copy;
  display: inline;
  quotes: '‘' '’' '“' '”';
  user-select: all;
}
.tln::before,
.translation::before {
  content: open-quote;
}
.tln::after,
.translation::after {
  content: close-quote;
}
:root {
  --font-unicode-sans: 'Noto Sans', 'Source Sans Pro', 'Andika', 'Lucida Sans Unicode', sans-serif;
  --font-unicode-serif: 'Linux Libertine', 'Charis SIL', 'Gentium Plus', 'Doulos SIL', 'Source Serif Pro', 'Noto Serif', 'Times New Roman', serif;
}
